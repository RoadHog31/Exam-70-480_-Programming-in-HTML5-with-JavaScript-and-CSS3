/* Responsive design */

/*How to Make a Responsive Website in 3 Easy Steps
https://catswhocode.com/how-to-make-a-responsive-website/
https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design
https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout
https://developer.mozilla.org/en-US/docs/Learn/Front-end_web_developer

1. Layout - (modile first, simple, one column. Media Queries -breakpoints , Grid, Flexbox, Multicol) 
2. Medias - video & images (<picture> <img>)
3. Typography - (viewport units / rems)  

Note: A common approach when using Media Queries is to create a simple single-column layout for narrow-screen devices (e.g mobile phones), then check for larger screens and implement a multiple-column layout when you know that you have enough screen width to handle it. This is often described as mobile first design.
https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries
old ways with floats https://mdn.github.io/css-examples/learn/rwd/float-based-rwd.html 

Note: responsive images - https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images

http://nicolasgallagher.com/responsive-images-using-css3/


*/

/* Responsive background image  */
body {
  background-image: url(images/background-photo.jpg);
  background-position: center center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
}

/* Repsonsive images */
img {
  max-width: 100%;
  height: auto;
}

/* Responsive HTML5 Videos */
video {
	max-width: 100%;
	height: auto;
}

/* YouTube videos - also see html file*/
.video-container {
  position: relative;
  padding-bottom: 56.25%;
  padding-top: 30px; height: 0; overflow: hidden;
}

.video-container iframe,
.video-container object,
.video-container embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* Responsive Typography */
h1 {
  font-size: calc(1.5rem + 3vw);
}

/* Row of links to dropdown menu - see html file*/
nav select {
  display: none;
}

@media (max-width: 960px) {
  nav ul     { display: none; }
  nav select { display: inline-block; }
}

/* Responsive Tables - see HTML file  and http://css-tricks.com/responsive-data-tables*/
/* 
Generic Styling, for Desktops/Laptops 
*/
table { 
  width: 100%; 
  border-collapse: collapse; 
}
/* Zebra striping */
tr:nth-of-type(odd) { 
  background: #eee; 
}
th { 
  background: #333; 
  color: white; 
  font-weight: bold; 
}
td, th { 
  padding: 6px; 
  border: 1px solid #ccc; 
  text-align: left; 
}

/* Media Query for Mobile Users */
@media only screen and (max-width: 760px),
(min-device-width: 768px) and (max-device-width: 1024px)  {

	/* Force table to not be like tables anymore */
	table, thead, tbody, th, td, tr { 
		display: block; 
	}
	
	/* Hide table headers (but not display: none;, for accessibility) */
	thead tr { 
		position: absolute;
		top: -9999px;
		left: -9999px;
	}
	
	tr { border: 1px solid #ccc; }
	
	td { 
		/* Behave  like a "row" */
		border: none;
		border-bottom: 1px solid #eee; 
		position: relative;
		padding-left: 50%; 
	}
	
	td:before { 
		/* Now like a table header */
		position: absolute;
		/* Top/left values mimic padding */
		top: 6px;
		left: 6px;
		width: 45%; 
		padding-right: 10px; 
		white-space: nowrap;
	}
	
	/*
	Label the data
	*/
	td:nth-of-type(1):before { content: "First Name"; }
	td:nth-of-type(2):before { content: "Last Name"; }
	td:nth-of-type(3):before { content: "Job Title"; }
	td:nth-of-type(4):before { content: "Favorite Color"; }
	td:nth-of-type(5):before { content: "Wars of Trek?"; }
	td:nth-of-type(6):before { content: "Horse Name"; }
	td:nth-of-type(7):before { content: "Date of Birth"; }
	td:nth-of-type(8):before { content: "Dream Vacation City"; }
	td:nth-of-type(9):before { content: "GPA"; }
	td:nth-of-type(10):before { content: "Arbitrary Data"; }
}
/* END of Responsive Tables*/

/* Media Queries - A complete starter template, containing media queries for every screen size, that will come in handy when you need to design responsive sites.*/
/* Smartphones, small screens (portrait and landscape) ----------- */
@media only screen and (min-device-width : 320px) and (max-device-width : 480px) {
  /* Styles */
  }
  
  /* Smartphones, small screens (landscape) ----------- */
  @media only screen and (min-width : 321px) {
  /* Styles */
  }
  
  /* Smartphones (portrait) ----------- */
  @media only screen and (max-width : 320px) {
  /* Styles */
  }
  
  /* iPads (portrait and landscape) ----------- */
  @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) {
  /* Styles */
  }
  
  /* iPads (landscape) ----------- */
  @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) {
  /* Styles */
  }
  
  /* iPads (portrait) ----------- */
  @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : portrait) {
  /* Styles */
  }
  /**********
  iPad 3
  **********/
  @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) and (-webkit-min-device-pixel-ratio : 2) {
  /* Styles */
  }
  
  @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : portrait) and (-webkit-min-device-pixel-ratio : 2) {
  /* Styles */
  }
  /* Desktops and laptops ----------- */
  @media only screen  and (min-width : 1224px) {
  /* Styles */
  }
  
  /* Large screens ----------- */
  @media only screen  and (min-width : 1824px) {
  /* Styles */
  }
  
  /* iPhone 4 ----------- */
  @media only screen and (min-device-width : 320px) and (max-device-width : 480px) and (orientation : landscape) and (-webkit-min-device-pixel-ratio : 2) {
  /* Styles */
  }
  
  @media only screen and (min-device-width : 320px) and (max-device-width : 480px) and (orientation : portrait) and (-webkit-min-device-pixel-ratio : 2) {
  /* Styles */
  }
  
  /* iPhone 5 ----------- */
  @media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){
  /* Styles */
  }
  
  @media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){
  /* Styles */
  }
  
  /* iPhone 6, 7, 8 ----------- */
  @media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){
  /* Styles */
  }
  
  @media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){
  /* Styles */
  }
  
  /* iPhone 6+, 7+, 8+ ----------- */
  @media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){
  /* Styles */
  }
  
  @media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){
  /* Styles */
  }
  
  /* iPhone X ----------- */
  @media only screen and (min-device-width: 375px) and (max-device-height: 812px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){
  /* Styles */
  }
  
  @media only screen and (min-device-width: 375px) and (max-device-height: 812px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){
  /* Styles */
  }
  
  /* iPhone XS Max, XR ----------- */
  @media only screen and (min-device-width: 414px) and (max-device-height: 896px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){
  /* Styles */
  }
  
  @media only screen and (min-device-width: 414px) and (max-device-height: 896px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){
  /* Styles */
  }
  
  /* Samsung Galaxy S3 ----------- */
  @media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){
  /* Styles */
  }
  
  @media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){
  /* Styles */
  }
  
  /* Samsung Galaxy S4 ----------- */
  @media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){
  /* Styles */
  }
  
  @media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){
  /* Styles */
  }
  
  /* Samsung Galaxy S5 ----------- */
  @media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){
  /* Styles */
  }
  
  @media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){
  /* Styles */
  }

/* Responsive paragraph using media queries */
p {
    font-size: 20px;
  }

  /* Only change code below this line */
 @media (max-height: 800px) {

    p {
        font-size: 10px;
        }
  }
  

/*Responsive images*/
  .responsive-img {

    max-width: 100%;
    display: block;
    height: auto;
  }
  
  img {
    width: 600px;
  }

  /*Apple MacBook Pro notebooks, and recently iMac computers Retina displays.
   Retina images - The simplest way to make your images properly appear on High-Resolution Displays, such as the MacBook Pros "retina display" is to define their width and height values as only half of what the original file is. Here is an example of an image that is only using half of the original height and width:*/
   .retina-img {height: 100px; width: 100px;}

   /*Typography - Instead of using em or px to size text, you can use viewport units for responsive typography. Viewport units, like percentages, are relative units, but they are based off different items. Viewport units are relative to the viewport dimensions (width or height) of a device, and percentages are relative to the size of the parent container element. 
   
   The four different viewport units are:

    vw (viewport width): 10vw would be 10% of the viewport's width.
    vh (viewport height): 3vh would be 3% of the viewport's height.
    vmin (viewport minimum): 70vmin would be 70% of the viewport's smaller dimension (height or width).
    vmax (viewport maximum): 100vmax would be 100% of the viewport's bigger dimension (height or width).

Here is an example that sets a body tag to 30% of the viewport's width.
body { width: 30vw; }
*/
.h2viewport{
    width: 80vw;
}

.pviewport{

    width: 75vmin;
}

/* FlexBox */
#box-container {
    
    display: flex;
    height: 500px;
    flex-direction: column;
    justify-content: center;
    
  }

  #box-1 {
    background-color: dodgerblue;
    width: 50%;
    height: 50%;
  }

  #box-2 {
    background-color: orangered;
    width: 50%;
    height: 50%;
  }

  /* Tweet Embed */
  body {
    
    font-family: Arial, sans-serif;
  }
  header {

    display: flex;
    flex-direction: row;
  }
  header .profile-thumbnail {
    width: 50px;
    height: 50px;
    border-radius: 4px;
  }
  header .profile-name {

    display:flex;
    flex-direction: column;
    margin-left: 10px;
    justify-content: flex-start;
  }
  header .follow-btn {

    display: flex;
    align-items:center;
    margin: 0 0 0 auto;
  }
  header .follow-btn button {

    display:flex;
    border: 0;
    border-radius: 3px;
    padding: 5px;
    
  }
  header h3, header h4 {

    display:flex;
    margin: 0;
  }
  #inner p {
    margin-bottom: 10px;
    font-size: 20px;
  }
  #inner hr {
    margin: 20px 0;
    border-style: solid;
    opacity: 0.1;
  }
  footer {

    display:flex;
    flex-direction: row;
  }
  footer .stats {

    display:flex;
    font-size: 15px;
  }
  footer .stats strong {
    font-size: 18px;
  }
  footer .stats .likes {
    margin-left: 10px;
  }
  footer .cta {
    margin-left: auto;
  }
  footer .cta button {
    border: 0;
    background: transparent;
  }

  /* END of Tweet Embed */

  /* flex-direction Property to Make a Row. */
  #box-container2 {
    display: flex;
    height: 500px;
    flex-direction:row-reverse;
    

  }
  #box-3 {
    background-color: dodgerblue;
    width: 50%;
    height: 50%;
  }

  #box-4 {
    background-color: orangered;
    width: 50%;
    height: 50%;
  }

  /* flexbox align-items Property . */
  #box-container3 {
    display: flex;
    height: 500px;
    flex-direction:row-reverse;
    border-style: groove;
    align-items:center;

  }
  #box-5 {
    background-color: rgb(30, 255, 68);
    width: 50%;
    height: 50%;
  }

  #box-6 {
    background-color: rgb(217, 255, 0);
    width: 50%;
    height: 50%;
  }

  /*flex-wrap*/
  #box-container4 {
    background: gray;
    display: flex;
    height: 100%;
    flex-wrap: wrap;
  }
  #box-7 {
    background-color: dodgerblue;
    width: 25%;
    height: 50%;
  }

  #box-8 {
    background-color: orangered;
    width: 25%;
    height: 50%;
  }
  #box-9 {
    background-color: violet;
    width: 25%;
    height: 50%;
  }
  #box-10 {
    background-color: yellow;
    width: 25%;
    height: 50%;
  }
  #box-11 {
    background-color: green;
    width: 25%;
    height: 50%;
  }
  #box-12 {
    background-color: black;
    width: 25%;
    height: 50%;
  }
  /*END of flex-wrap*/

  /*flex-shrink*/
  #box-container5 {
    display: flex;
    height: 500px;
  }
  #box-13 {
    background-color: dodgerblue;
    width: 100%;
    height: 200px;
    flex-shrink: 1;
  }

  #box-14 {
    background-color: orangered;
    width: 100%;
    height: 200px;
    flex-shrink: 2;
  }
  /*END of flex-shrink*/

    /*flex-grow*/
    #box-container6 {
      display: flex;
      height: 500px;
    }
    #box-15 {
      background-color: dodgerblue;
      width: 100%;
      height: 200px;
      flex-grow: 1;
    }
  
    #box-16 {
      background-color: orangered;
      width: 100%;
      height: 200px;
      flex-grow: 2;
    }
    /*END of flex-grow*/

    /*flex shorthand grow, shrink basis inline. The default property settings are flex: 0 1 auto;.*/
    #box-container7 {
      display: flex;
      height: 500px;
    }
    #box-17 {
      background-color: dodgerblue;
      flex: 2 2 150px;     
      height: 200px;
      
    }
  
    #box-18 {
      background-color: orangered;
      flex: 1 1 150px;
      height: 200px;
      
    }
     /*END of flex shorthand*/

     /*Flex align-self*/
    #box-container8 {
      display: flex;
      height: 500px;
    }
    #box-1 {
      background-color: dodgerblue;
      align-self:center;
      height: 200px;
      width: 200px;
    }
  
    #box-2 {
      background-color: orangered;
      align-self:flex-end;
      height: 200px;
      width: 200px;
    }
     /*END of flex align-self*/

     /* Introduction to the CSS Grid Challenges */